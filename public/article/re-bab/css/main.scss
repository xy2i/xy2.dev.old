$sm: 600px;
$md: 800px;
$lg: 1000px;

//$primary: #D95E37;
//$secondary: #313854;
// Couleur thÃ©
$primary: #533633;
$secondary: #b4b881;
$light-gray: #ddd;
$dark-gray: #433f3c;
$light-white: white;

$btn-radius: 0.25rem 0.25rem 1rem 0.25rem;
$btn-radius-top: 0.25rem 0.25rem 0 0;
.d3-map {
  margin-bottom: 1rem;
  .nav {
    display: flex;
    width: 100%;
    justify-content: space-between;
  }
  /* Non-animated title, used only for content. 
   We use a pattern here (same for the buttons, too):
   1. Create a container element, invisible but with the actual content itself in a .shadow class.
   2. Create the actual content on top of that, which has position:absolute,
    in order to break it out of the document flow and animate it. 
   Finally, when d3 animates on state change, the element resizes correctly,
   and the absolutely-positionned title updates on top of that.
   Pseudo-elements don't work here unfortunately, because d3 can't select them for animation. */
  .title-container {
    /* We need a container with content, to have the correct size in flex.*/
    position: relative;
    margin-left: 1rem;
    margin-right: 1rem;
    /* However, we don't actually need the content itself, but just the size. */
    background-color: rgba(255, 255, 255, 0.3);
    border: 1px solid $primary;
    border-top: 0;
    border-left: 0;
    border-right: 0;
    font-family: "Roboto Condensed";
    font-size: 1.4rem;
    color: $primary;
    transition: border-color 0.2s linear;
  }
  .title-container:hover {
    transition: border-color 0.2s linear;
    border-style: dotted;
    color: $secondary;
    border-color: $secondary;
  }
  /* Shadow title. */
  .title-container .shadow {
    opacity: 0;
    font-family: "Roboto Condensed";
    font-size: 1.4rem;
  }
  /* Animated title. */
  .title-container .title {
    /* Finally, make sure the opacity doens't apply to the animated part. */
    opacity: 1;
    position: absolute;
    top: 0;
    left: 0;
    text-decoration: none;
    color: $primary;
    transition: color 0.2s linear;
  }
  .title-container .title:hover {
    transition: color 0.2s linear;
    color: $secondary;
  }
  .d3-btn {
    font-family: "Fira Code";
    position: relative;
    text-decoration: none;
    padding: 0.25rem 0.5rem;
    border-radius: $btn-radius;
    transition: background 0.1s linear;
    background: $primary;
    border: none;
    color: white;
  }
  .d3-btn::before {
    // Position the item
    position: absolute;
    content: "";
    bottom: 0;
    right: 0;
    height: 100%;
    width: 100%;
    background: $secondary;
    z-index: -1;
    // Style
    border-radius: $btn-radius;
    // Ease out
    // Expotential transform
    transition: transform 0.2s cubic-bezier(1, 0, 0, 1);
    transform: translateX(0rem) translateY(0rem);
  }
  .d3-btn:hover {
    background: rgba($primary, 0.8);
    transition: background 0.05s linear;
  }
  .d3-btn:hover::before {
    position: absolute;
    content: "";
    bottom: 0;
    right: 0;
    height: 100%;
    width: 100%;
    background: $secondary;
    transform: translateX(0.25rem) translateY(0.25rem);
    transition: transform 0.05s linear;
  }
  .d3-btn:active::before {
    transform: translateX(0.5rem) translateY(0.5rem);
    background: rgba($secondary, 0.4);
    transition: transform 0.05s linear;
    transition: background 0.05s linear;
  }
  ul {
    display: flex;
    width: 100%;
    margin-top: 1rem;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 1rem;
    align-items: center;
    flex-direction: column;
    padding: 0;
    list-style: none;
    border-radius: $btn-radius;
    border: 1px solid $primary;
    li {
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background-color 0.5s linear;
      a {
        width: 100%;
        text-align: center;
        font-size: 1.5rem;
        text-decoration: none;
      }
    }
    li:not(:first-child) {
      border-top: 1px solid $secondary;
      border-radius: $btn-radius-top;
    }
    li:last-child {
      border-radius: $btn-radius;
    }
    li:hover {
      transition: background-color 0.25s linear;
      background-color: $secondary;
    }
  }
}

.content {
  .github-code {
    display: flex;
    float: right;
    border-radius: $btn-radius;
    border: 1px solid $secondary;
    padding: 0.25rem;
    margin-left: 0.25rem;
    > svg {
      color: $secondary;
      padding-right: 0.5rem;
    }
    a:not(:last-child) {
      margin-right: 0.5rem;
    }
    a:last-child {
      margin-right: 0.125rem;
    }
  }
}

@media (min-width: $sm) {
  .d3-map {
    ul {
      width: 75%;
    }
  }
}